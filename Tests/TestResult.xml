<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="17" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2016-01-10" time="11:33:28">
  <environment user="adrianr" machine-name="CO-IT05" cwd="C:\windows\System32" user-domain="BLACKHILLSFCU" platform="Microsoft Windows 10 Enterprise|C:\WINDOWS|\Device\Harddisk0\Partition2" nunit-version="2.5.8.0" os-version="10.0.10586" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="Powershell" name="Pester" executed="True" result="Success" success="True" time="5.0214" asserts="0">
    <results>
      <test-suite type="TestFixture" name="Adrian's PowerShell Scripts" executed="True" result="Success" success="True" time="5.0214" asserts="0" description="Adrian's PowerShell Scripts">
        <results>
          <test-case description="Add-LocalGroupMember.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Add-LocalGroupMember.psm1 conforms to PowerShell best practices." executed="True" time="1.8276" asserts="0" success="True" result="Success" />
          <test-case description="Add-WorkstationPrinter.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Add-WorkstationPrinter.psm1 conforms to PowerShell best practices." executed="True" time="0.0405" asserts="0" success="True" result="Success" />
          <test-case description="Connect-ConfigMgr.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Connect-ConfigMgr.psm1 conforms to PowerShell best practices." executed="True" time="0.0243" asserts="0" success="True" result="Success" />
          <test-case description="Connect-Exchange.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Connect-Exchange.psm1 conforms to PowerShell best practices." executed="True" time="0.0399" asserts="0" success="True" result="Success" />
          <test-case description="Connect-Lync.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Connect-Lync.psm1 conforms to PowerShell best practices." executed="True" time="0.0296" asserts="0" success="True" result="Success" />
          <test-case description="Connect-Viewer.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Connect-Viewer.psm1 conforms to PowerShell best practices." executed="True" time="0.039" asserts="0" success="True" result="Success" />
          <test-case description="Enable-RemotePSRemoting.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Enable-RemotePSRemoting.psm1 conforms to PowerShell best practices." executed="True" time="0.0269" asserts="0" success="True" result="Success" />
          <test-case description="Get-LocalGroupMembership.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Get-LocalGroupMembership.psm1 conforms to PowerShell best practices." executed="True" time="0.569" asserts="0" success="True" result="Success" />
          <test-case description="Get-Monitor.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Get-Monitor.psm1 conforms to PowerShell best practices." executed="True" time="0.0429" asserts="0" success="True" result="Success" />
          <test-case description="Get-ServiceExecutablePermission.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Get-ServiceExecutablePermission.psm1 conforms to PowerShell best practices." executed="True" time="0.4253" asserts="0" success="True" result="Success" />
          <test-case description="Get-WorkstationPrinter.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Get-WorkstationPrinter.psm1 conforms to PowerShell best practices." executed="True" time="0.0277" asserts="0" success="True" result="Success" />
          <test-case description="Invoke-ConfigMgrInstallation.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Invoke-ConfigMgrInstallation.psm1 conforms to PowerShell best practices." executed="True" time="0.9359" asserts="0" success="True" result="Success" />
          <test-case description="Invoke-ConfigMgrUpdate.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Invoke-ConfigMgrUpdate.psm1 conforms to PowerShell best practices." executed="True" time="0.4468" asserts="0" success="True" result="Success" />
          <test-case description="New-AudioNotification.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.New-AudioNotification.psm1 conforms to PowerShell best practices." executed="True" time="0.0603" asserts="0" success="True" result="Success" />
          <test-case description="Remove-LocalGroupMember.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Remove-LocalGroupMember.psm1 conforms to PowerShell best practices." executed="True" time="0.4099" asserts="0" success="True" result="Success" />
          <test-case description="Remove-WorkstationPrinter.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Remove-WorkstationPrinter.psm1 conforms to PowerShell best practices." executed="True" time="0.0292" asserts="0" success="True" result="Success" />
          <test-case description="Test-PSRemoting.psm1 conforms to PowerShell best practices." name="Adrian's PowerShell Scripts.Test-PSRemoting.psm1 conforms to PowerShell best practices." executed="True" time="0.0464" asserts="0" success="True" result="Success" />
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>